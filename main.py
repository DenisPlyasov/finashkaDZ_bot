from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler,
    MessageHandler, filters, ContextTypes
)
import homework
from homework import homework_menu, homework_callback, message_handler
from schedule import schedule_menu, schedule_callback
from teachers_schedule import get_conv_handler,conv


WELCOME_TEXT = (
    "–ü—Ä–∏–≤–µ—Ç! üëã\n"
    "–Ø ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Ç–≤–æ–µ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. "
    "–ú–æ–≥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –ø–∞—Ä–∞—Ö, —Ö—Ä–∞–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–æ–º–æ–≥–∞—Ç—å —Å –¥–æ–º–∞—à–∫–æ–π.\n\n"
    "–í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ:"
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [
            InlineKeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="schedule"),
            InlineKeyboardButton("–î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞", callback_data="homework"),
            InlineKeyboardButton("–ü–æ—á—Ç–∞", callback_data="mail"),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(WELCOME_TEXT, reply_markup=reply_markup)


async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "schedule":
        await schedule_menu(update, context)
    elif query.data == "mail":
        await query.edit_message_text("üìß –†–∞–∑–¥–µ–ª —Å –ø–æ—á—Ç–æ–π –ø–æ–∫–∞ –ø—É—Å—Ç.")
    elif query.data == "homework":
        await homework.homework_menu(update, context)
    elif query.data.startswith("hw_"):
        # –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã hw_* –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç homework.homework_callback
        await homework.homework_callback(update, context)


token_value = open('token.txt').readline()

def main():
    app = ApplicationBuilder().token(token_value).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(get_conv_handler())
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, homework.message_handler))
    app.add_handler(CallbackQueryHandler(button_handler, pattern="^(schedule|select_group)$"))
    app.add_handler(CallbackQueryHandler(homework_callback, pattern="^hw_"))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))
    app.add_handler(conv)

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()