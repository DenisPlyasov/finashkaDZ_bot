from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, CallbackQueryHandler,
    MessageHandler, filters, ContextTypes
)
from telegram.constants import ParseMode


START_TEXT = (
    "1Ô∏è‚É£ *–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å.*\n"
    "–ó–¥–µ—Å—å –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ª—é–±–æ–π –≥—Ä—É–ø–ø—ã, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏–ª–∏ –∂–µ –ª–∏—á–Ω–æ –≤–∞—à–µ, –∫–æ–≥–¥–∞ –¥–æ–±–∞–≤–∏—Ç–µ –µ–≥–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ."
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        [
            InlineKeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="schedule"),
            InlineKeyboardButton("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", callback_data="teachers_schedule"),
            InlineKeyboardButton("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data="select_group"),
        ]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(START_TEXT, reply_markup=reply_markup, parse_mode=ParseMode.MARKDOWN,)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    if query.data == "schedule":
        await query.edit_message_text("üìÖ –†–∞–∑–¥–µ–ª —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –ø–æ–∫–∞ –ø—É—Å—Ç.")
    elif query.data == "select_group":
        await query.edit_message_text("üìß –†–∞–∑–¥–µ–ª —Å –ø–æ—á—Ç–æ–π –ø–æ–∫–∞ –ø—É—Å—Ç.")
    elif query.data == "teachers_schedule":
        await teachers_schedule.teacher_schedule_menu(update, context)


token_value = "8204528132:AAE3Fw9H0WJKhxGz5sP_UBiOQr-jyrrlcjo"

def main():
    app = ApplicationBuilder().token(token_value).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))


    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()